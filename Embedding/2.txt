ARM微处理器的特点
    低功耗,性能强...
ARM 各体系架构版本与各系列产品的特点

CISC和RISC 体系结构的特点和区别
    CISC -> 种类繁多,指令功能强大,指令长度因指令不同而不同,指令的执行时间不同
    RISC -> 短小精悍的指令集,指令相同的长度,大部分指令的执行周期在一个周期,采用LS模式

冯诺依曼和哈弗架构
    冯 -> 处理器指令和数据使用相同存储器
    哈弗 -> 独立的存储器模块分别负责存储指令和数据 可以指令和数据并行
ARM微处理器的工作状态和特点
    一般两种 ARM状态,Thumb状态(16bit)
    ARM在开始执行代码的时候,应该处于ARM状态
    使用BX指令在两种状态间切换
ARM存储器格式
    从零开始的线性组合,最大4GB 
    大段格式 -> 高字节在低地址,小端格式 ->高字节在高地址(intel,embedding大多采用)
    ARM支持字节8,半字16,字32三种数据类型
ARM处理器的工作模式
    防止用户程序有意或者无意对系统程序的破坏 
    分为系统模式和用户模式
    用户/系统/快中断/中断/管理/访问中至/未定义
ARM状态下的寄存器组织
    R0-15是通用寄存器   
    R0 - R13 为通用寄存器
    R0 - R7 为未分组寄存器 任何处理器模式都可以使用
    R8 - R14 为分组寄存器 
    R14 为链接寄存器 , 保存返回地址
    R15 - 程序计数器   CPSR SPSR - >程序状态寄存器 
程序状态寄存器CPSR的结构和作用
    反映了当前处理器的状态
异常的基本概念和分类
    异常:处理器展示脱离正常的指令序列并转跳到另外的程序段去运行
    包括异常(软件触发)和中断(硬件触发)
    进入异常处理程序前要保存当前工作环境
    七种不同异常
        硬件触发 -> 普通中断 快中断
        软件触发 -> 复位 未定义指令 软件中断 指令预取中止 数据中止
异常的响应和返回
    异常的响应流程 4 step
    异常的返回 与响应相对应  感觉蛮重要的
ARM处理器的寻址方式
    指令由操作码和操作数组成 程序是使计算机完成一个任务的一组命令或指令序列
    立即寻址 #0xFF00
    寄存器寻址 MOV R2 R3
    寄存器间接寻址 LDR R1 [R2]
    基址变址寻址 LDR R0,[R1 ,#0x08]
    
    *寄存器移位寻址
        LSL 逻辑左移/ASL算术左移 低位用0填充
        LSR 逻辑右移 左端用0来填充
        ROR 循环右移 很好理解
        ASR 算术右移 最左边的位保存不变 ,对有符号的使用保持符号位不变
    多寄存器寻址
    堆栈寻址
    相对寻址
ARM的指令格式 
    ARM的指令集是加载/存储型的
    <opcode> {<cond>} {S}         {Rd},{Rn} {op2}
    指令助记符 条件  是否影响CPSR值 目标寄存器 
    立即数的合法性判断
    8位常数 通过循环右移 偶数 位可以得到的数
    条件码:
        4位条件码

ARM9的指令系统
    跳转指令，数据处理指令，存储器访问指令，协处理器指令，杂项指令，饱和算术指令
    数据源 1.R0 - R15 2.外部存储器
    加载指令 LDR  存储指令 STR
    L/S指令分为三类 单寄存器数据LS 多寄存器LS 数据交换指令
    数据处理指令分三类 数据传送指令 算术逻辑运算指令 比较指令 
ARM的伪指令
    不属于ARM指令集中的指令,在编译的时会被等效的一条或者多条指令代替
    ADR ADRL LDR NOP 

    


